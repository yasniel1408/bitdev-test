import Server, { Stage } from './Server';
import { PrerendererOptions, PrerendererFinalOptions } from './PrerendererOptions';
import IRenderer from './IRenderer';
type HookCallback = (server: Server) => void;
export default class Prerenderer {
    private readonly options;
    private readonly server;
    private renderer;
    private hooks;
    constructor(options: PrerendererOptions);
    initialize(): Promise<void>;
    destroy(): Promise<void>;
    getServer(): Server;
    getRenderer(): IRenderer;
    getOptions(): PrerendererFinalOptions;
    hookServer(callback: HookCallback, stage?: Stage): this;
    /** @internal */
    modifyServer(stage: Stage): void;
    renderRoutes(routes: string[]): Promise<import("./IRenderer").RenderedRoute[]>;
}
export {};
