"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var path_1 = __importDefault(require("path"));
var portfinder_1 = require("portfinder");
var stoppable_1 = __importDefault(require("stoppable"));
var Server = /** @class */ (function () {
    function Server(prerenderer) {
        this.nativeServer = null;
        this.prerenderer = prerenderer;
        this.expressServer = (0, express_1.default)();
        this.options = prerenderer.getOptions();
    }
    Server.prototype.getExpressServer = function () {
        return this.expressServer;
    };
    Server.prototype.getPrerenderer = function () {
        return this.prerenderer;
    };
    Server.prototype.initialize = function () {
        return __awaiter(this, void 0, void 0, function () {
            var server, originalPort, _a, _b, proxy_1, serverPromise, i, success, error;
            var _this = this;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        server = this.expressServer;
                        originalPort = this.options.server.port;
                        _a = this.options.server;
                        _b = this.options.server.port;
                        if (_b) return [3 /*break*/, 2];
                        return [4 /*yield*/, (0, portfinder_1.getPortPromise)()];
                    case 1:
                        _b = (_c.sent());
                        _c.label = 2;
                    case 2:
                        _a.port = _b || 13010;
                        if (this.options.server && this.options.server.before) {
                            this.options.server.before(server);
                        }
                        this.prerenderer.modifyServer('pre-static');
                        if (!(this.options.server && this.options.server.proxy)) return [3 /*break*/, 4];
                        proxy_1 = this.options.server.proxy // Avoid possible external mutation to undefined
                        ;
                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require('http-proxy-middleware')); }).then(function (_a) {
                                var createProxyMiddleware = _a.createProxyMiddleware;
                                Object.keys(proxy_1).forEach(function (proxyPath) {
                                    return server.use(proxyPath, createProxyMiddleware(__assign({ logLevel: 'warn' }, proxy_1[proxyPath])));
                                });
                            }).catch(function () {
                                throw new Error('The http-proxy-middleware module could not be loaded, did you install it?');
                            })];
                    case 3:
                        _c.sent();
                        _c.label = 4;
                    case 4:
                        server.get('*', express_1.default.static(this.options.staticDir, {
                            dotfiles: 'allow',
                        }));
                        this.prerenderer.modifyServer('post-static');
                        this.prerenderer.modifyServer('pre-fallback');
                        server.get('*', function (req, res) {
                            res.sendFile(_this.options.indexPath ? path_1.default.resolve(_this.options.staticDir, _this.options.indexPath) : path_1.default.join(_this.options.staticDir, 'index.html'));
                        });
                        this.prerenderer.modifyServer('post-fallback');
                        serverPromise = function () { return new Promise(function (resolve, reject) {
                            _this.nativeServer = (0, stoppable_1.default)(server.listen(_this.options.server.port, _this.options.server.listenHost, function () {
                                resolve();
                            }));
                            _this.nativeServer.on('error', function (err) {
                                reject(err);
                            });
                        }); };
                        i = 0;
                        success = false;
                        error = null;
                        _c.label = 5;
                    case 5:
                        if (!(!error && !success && i++ < 10)) return [3 /*break*/, 7];
                        return [4 /*yield*/, serverPromise().then(function () {
                                if (originalPort && originalPort !== _this.options.server.port) {
                                    console.warn("The provided port (".concat(originalPort, ") is already in use, so port ").concat(_this.options.server.port, " was used instead"));
                                }
                                success = true;
                            }).catch(function (e) {
                                if (/EADDRINUSE/.test(e.message)) {
                                    return (0, portfinder_1.getPortPromise)().then(function (port) {
                                        _this.options.server.port = port;
                                    });
                                }
                                else {
                                    error = e;
                                }
                            })];
                    case 6:
                        _c.sent();
                        return [3 /*break*/, 5];
                    case 7:
                        if (error) {
                            throw error;
                        }
                        else if (!success) {
                            throw new Error('The server could not initialize for unknown reasons');
                        }
                        this.prerenderer.modifyServer('post-listen');
                        return [2 /*return*/];
                }
            });
        });
    };
    Server.prototype.destroy = function () {
        var _this = this;
        return new Promise(function (resolve) {
            var _a;
            (_a = _this.nativeServer) === null || _a === void 0 ? void 0 : _a.stop(function () { return resolve(); });
        });
    };
    return Server;
}());
exports.default = Server;
