"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Server_1 = __importDefault(require("./Server"));
var PrerendererOptions_1 = require("./PrerendererOptions");
var PackageName_1 = __importDefault(require("./PackageName"));
var schema_utils_1 = require("schema-utils");
var ts_deepmerge_1 = __importDefault(require("ts-deepmerge"));
var Prerenderer = /** @class */ (function () {
    function Prerenderer(options) {
        this.hooks = {};
        (0, schema_utils_1.validate)(PrerendererOptions_1.schema, options, {
            name: PackageName_1.default,
            baseDataPath: 'options',
        });
        this.options = (0, ts_deepmerge_1.default)(PrerendererOptions_1.defaultOptions, options);
        this.server = new Server_1.default(this);
        if (!this.options)
            throw new Error("".concat(PackageName_1.default, " Options must be defined!"));
    }
    Prerenderer.prototype.initialize = function () {
        return __awaiter(this, void 0, void 0, function () {
            var renderer, RendererClass, RC;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(typeof this.options.renderer === 'string')) return [3 /*break*/, 2];
                        return [4 /*yield*/, Promise.resolve("".concat(this.options.renderer)).then(function (s) { return __importStar(require(s)); })];
                    case 1:
                        RendererClass = (_a.sent()).default;
                        renderer = new RendererClass(this.options.rendererOptions);
                        return [3 /*break*/, 3];
                    case 2:
                        if (typeof this.options.renderer === 'function') {
                            RC = this.options.renderer;
                            renderer = new RC(this.options.rendererOptions);
                        }
                        else {
                            renderer = this.options.renderer;
                        }
                        _a.label = 3;
                    case 3:
                        this.renderer = renderer;
                        if (this.renderer && this.renderer.preServer)
                            this.renderer.preServer(this);
                        return [4 /*yield*/, this.server.initialize()];
                    case 4:
                        _a.sent();
                        return [4 /*yield*/, this.renderer.initialize()];
                    case 5:
                        _a.sent();
                        return [2 /*return*/, Promise.resolve()];
                }
            });
        });
    };
    Prerenderer.prototype.destroy = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.renderer) return [3 /*break*/, 2];
                        return [4 /*yield*/, Promise.all([this.renderer.destroy(), this.server.destroy()])];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    Prerenderer.prototype.getServer = function () {
        return this.server;
    };
    Prerenderer.prototype.getRenderer = function () {
        return this.renderer;
    };
    Prerenderer.prototype.getOptions = function () {
        return this.options;
    };
    Prerenderer.prototype.hookServer = function (callback, stage) {
        if (stage === void 0) { stage = 'pre-fallback'; }
        var hooks = this.hooks[stage] || [];
        hooks.push(callback);
        this.hooks[stage] = hooks;
        return this;
    };
    /** @internal */
    Prerenderer.prototype.modifyServer = function (stage) {
        var _this = this;
        if (this.renderer.modifyServer) {
            this.renderer.modifyServer(this, stage);
        }
        if (this.hooks[stage]) {
            this.hooks[stage].forEach(function (cb) { return cb(_this.server); });
        }
    };
    Prerenderer.prototype.renderRoutes = function (routes) {
        var _this = this;
        return this.renderer.renderRoutes(routes, this)
            // Handle non-ASCII or invalid URL characters in routes by normalizing them back to unicode.
            // Some browser environments may change unicode or special characters in routes to percent encodings.
            // We need to convert them back for saving in the filesystem.
            .then(function (renderedRoutes) {
            renderedRoutes.forEach(function (rendered) {
                rendered.route = decodeURIComponent(rendered.route);
            });
            if (_this.options.postProcess) {
                var postProcess_1 = _this.options.postProcess.bind(_this);
                return Promise.all(renderedRoutes.map(function (renderedRoute) { return postProcess_1(renderedRoute, renderedRoutes); })).then(function () {
                    return renderedRoutes.filter(function (route) { return typeof route === 'object' && route && typeof route.html === 'string' && route.html.length > 0; });
                });
            }
            return renderedRoutes;
        });
    };
    return Prerenderer;
}());
exports.default = Prerenderer;
