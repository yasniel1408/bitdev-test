{"version":3,"names":["_generator","data","require","_reactGenerator","_reactGenerator2","_reactApps","_typescript","_preview","_typescript2","_defender","_eslint","_application","_defender2","_defender3","_typescript3","_interopRequireDefault","_builder","_workspaceConfigFiles","_pkg","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","ReactEnv","constructor","resolve","CAPSULE_ARTIFACTS_DIR","ReactPreview","hostDependencies","main","types","compiler","TypescriptCompiler","from","tsconfig","tsconfigPath","typescript","tester","JestTester","jest","config","jestConfigPath","preview","mounter","previewMounter","schemaExtractor","TypeScriptExtractor","linter","ESLintLinter","eslint","ESLintLib","configPath","eslintConfigPath","pluginsPath","__dirname","extensions","eslintExtensions","formatter","PrettierFormatter","prettierConfigPath","build","Pipeline","TypescriptTask","EslintTask","JestTask","snap","tag","workspaceConfig","ConfigWriterList","TypescriptConfigWriter","EslintConfigWriter","PrettierConfigWriter","starters","StarterList","ReactWorkspaceStarter","generators","TemplateList","ReactComponentTemplate","ReactHookTemplate","ReactContextTemplate","ReactAppTemplate","ReactJSComponentTemplate","ReactEnvTemplate","apps","AppTypeList","ReactAppType","package","PackageGenerator","packageJson","npmIgnore","exports","_default"],"sources":["react-env.bit-env.ts"],"sourcesContent":["import { Compiler } from '@teambit/compiler';\nimport { StarterList, TemplateList } from '@teambit/generator';\nimport { ReactAppTemplate, ReactComponentTemplate, ReactContextTemplate, ReactEnvTemplate, ReactHookTemplate, ReactJSComponentTemplate } from '@teambit/react.generator.react-templates';\nimport { ReactWorkspaceStarter } from '@teambit/react.generator.react-starters';\nimport { ReactAppType } from '@teambit/react.apps.react-app-types';\nimport { TypeScriptExtractor } from '@teambit/typescript';\nimport { ReactPreview } from '@teambit/preview.react-preview';\nimport { EnvHandler } from '@teambit/envs';\nimport {\n  TypescriptCompiler,\n  // resolveTypes,\n  TypescriptTask,\n  TypescriptConfigWriter,\n  resolveTypes\n} from '@teambit/typescript.typescript-compiler';\nimport { ESLintLinter, EslintConfigWriter, EslintTask } from '@teambit/defender.eslint-linter';\nimport { ESLint as ESLintLib } from 'eslint';\nimport { AppTypeList } from '@teambit/application';\nimport { JestTask, JestTester } from '@teambit/defender.jest-tester';\nimport { PrettierConfigWriter, PrettierFormatter } from '@teambit/defender.prettier-formatter';\nimport typescript from 'typescript';\nimport { Tester } from '@teambit/tester';\nimport { Pipeline, CAPSULE_ARTIFACTS_DIR } from '@teambit/builder';\nimport { Preview } from '@teambit/preview';\nimport { SchemaExtractor } from '@teambit/schema';\nimport { ConfigWriterList } from '@teambit/workspace-config-files';\nimport { PackageGenerator } from '@teambit/pkg';\nimport { ReactEnvInterface } from './react-env-interface';\n// import webpackTransformer from './config/webpack.config';\n\nexport class ReactEnv implements ReactEnvInterface {\n  [key: string]: any;\n\n  /**\n   * name of the environment. used for friendly mentions across bit.\n   */\n  name = 'react';\n\n  /**\n   * icon for the env. use this to build a more friendly env.\n   * uses react by default.\n   */\n  icon = 'https://static.bit.dev/extensions-icons/react.svg';\n\n  protected tsconfigPath = require.resolve('./config/tsconfig.json');\n  \n  protected tsTypesPath = './types';\n\n  protected jestConfigPath = require.resolve('./config/jest.config');\n\n  protected eslintConfigPath = require.resolve('./config/eslintrc.js');\n  \n  protected eslintExtensions = ['.ts', '.tsx', '.js', '.jsx', '.mjs'];\n\n  protected prettierConfigPath = require.resolve('./config/prettier.config.js');\n  \n  protected prettierExtensions = [\n    '.js',\n    '.jsx',\n    '.ts',\n    '.tsx',\n    '.mjs',\n    '.cjs',\n    '.json',\n    '.css',\n    '.scss',\n    '.md',\n    '.mdx',\n    '.html',\n    '.yml',\n    '.yaml',\n  ];\n\n  protected previewMounter = require.resolve('./preview/mounter');\n  \n  protected previewDocsTemplate = require.resolve('./preview/docs');\n\n  /**\n   * Default npm ignore paths.\n   * Will ignore the \"artifacts\" directory by default.\n   */\n  npmIgnore = [`${CAPSULE_ARTIFACTS_DIR}/`];\n\n  /**\n   * Default host dependencies for the react preview.\n   */\n  hostDependencies = ReactPreview.hostDependencies;\n\n  /**\n   * Default package.json modifications.\n   */\n  packageJson = {\n    main: 'dist/{main}.js',\n    types: '{main}.ts',\n    // type: 'module',\n  };\n\n  /**\n   * return an instance of a Compiler. use components like typescript-compiler (teambit.typescript/typescript-compiler)\n   * or our babel-compiler (teambit.compilation/babel-compiler).\n   */\n  // TODO: make sure we only run compiler once @david.\n  compiler(): EnvHandler<Compiler> {\n    // const babelConfig = this.react.getBabelDefaultConfig();\n    // const babelCompiler = new BabelCompiler(babelConfig);\n    return TypescriptCompiler.from({\n      tsconfig: this.tsconfigPath,\n      // types: resolveTypes(__dirname, [this.tsTypesPath]),\n      typescript,\n    });\n  }\n\n  /**\n   * returns an instance of a Bit tester implementation. use components like mocha-tester or\n   * jest-tester or [build your own](https://bit.dev/docs/tester/implement-tester).\n   */\n  tester(): EnvHandler<Tester> {\n    // TODO @gilad: check jest tester on watch.\n    // TODO: upgrade to jest 29.\n    return JestTester.from({\n      jest: require.resolve('jest'),\n      config: this.jestConfigPath\n    });\n  }\n\n  /**\n   * return an instance of a Bit preview instance. used for preview purposes.\n   * base preview is a general purpose webpack preview.\n   */\n  preview(): EnvHandler<Preview> {\n    return ReactPreview.from({\n      /**\n       * override the default docs template for components.\n       */\n      // docsTemplate: this.previewDocsTemplate,\n      /**\n       * mounters are used to mount components to DOM\n       * during preview. use them for wrapping your components\n       * with routing, theming, data fetching or other types\n       * of providers.\n       */\n      mounter: this.previewMounter\n      // transformers: [webpackTransformer],\n      // webpackModulePath: require.resolve(\"webpack\"),\n      // webpackDevServerModulePath: require.resolve(\"webpack-dev-server\")\n    });\n  }\n\n  /**\n   * returns an instance of the default TypeScript extractor.\n   * used by default for type inference for both JS and TS.\n   */\n  schemaExtractor(): EnvHandler<SchemaExtractor> {\n    return TypeScriptExtractor.from({\n      tsconfig: this.tsconfigPath\n    });\n  }\n\n  /**\n   * returns an instance of the default ESLint.\n   * config files would be used to validate coding standards in components.\n   * bit will write the minimum required files in any workspace to optimize\n   * for dev experience.\n   */\n  linter() {\n    return ESLintLinter.from({\n      tsconfig: this.tsconfigPath,\n      eslint: ESLintLib,\n      configPath: this.eslintConfigPath,\n      // resolve all plugins from the react environment.\n      pluginsPath: __dirname,\n      extensions: this.eslintExtensions\n    });\n  }\n\n  /**\n   * used by bit's formatter. helps to standardize and automate\n   * code styling. can be used a build task or using bit lint and common\n   * ides.\n   */\n  formatter() {\n    return PrettierFormatter.from({\n      configPath: this.prettierConfigPath\n    });\n  }\n\n  /**\n   * define the build pipeline for a component.\n   * pipelines are optimized for performance and consistency.\n   * making sure every component is independently built and tested.\n   */\n  build() {\n    // :TODO fix build task\n    return Pipeline.from([\n      TypescriptTask.from({\n        tsconfig: this.tsconfigPath,\n        // types: resolveTypes(__dirname, [\"./types\"]),\n        typescript,\n      }),\n      EslintTask.from({\n        tsconfig: this.tsconfigPath,\n        eslint: ESLintLib,\n        configPath: this.eslintConfigPath,\n        // resolve all plugins from the react environment.\n        pluginsPath: __dirname,\n        extensions: this.eslintExtensions\n      }),\n      JestTask.from({\n        config: this.jestConfigPath,\n        jest: require.resolve('jest'),\n      }),\n    ]);\n  }\n\n  /**\n   * add build tasks to execute upon [snap](https://bit.dev/docs/snaps).\n   * use the snap pipeline for staging and test deployments\n   */\n  snap() {\n    return Pipeline.from([]);\n  }\n\n  /**\n   * add build tasks to execute upon [tag](https://bit.dev/docs/tags).\n   * use the tag pipeline for deployments, or other tasks required for\n   * publishing a semantic version for a component.\n   */\n  tag() {\n    return Pipeline.from([]);\n  }\n\n  workspaceConfig(): ConfigWriterList {\n    return ConfigWriterList.from([\n      TypescriptConfigWriter.from({\n        tsconfig: this.tsconfigPath\n        // types: resolveTypes(__dirname, [this.tsTypesPath]),\n      }),\n      EslintConfigWriter.from({\n        configPath: this.eslintConfigPath,\n        tsconfig: this.tsconfigPath\n      }),\n      PrettierConfigWriter.from({\n        configPath: this.prettierConfigPath\n      })\n    ]);\n  }\n\n  /**\n   * a list of starters for new projects. this helps create a quick and\n   * standardized\n   */\n  starters() {\n    return StarterList.from([ReactWorkspaceStarter.from()]);\n  }\n\n  /**\n   * set a list of component templates to use across your\n   * workspaces. new workspaces would be set to include\n   * your envs by default.\n   */\n  generators() {\n    return TemplateList.from([\n      ReactComponentTemplate.from(),\n      ReactHookTemplate.from(),\n      ReactContextTemplate.from(),\n      ReactAppTemplate.from(),\n      ReactJSComponentTemplate.from(),\n      ReactEnvTemplate.from(),\n    ]);\n  }\n\n  apps(): EnvHandler<AppTypeList> {\n    return AppTypeList.from([ReactAppType.from()]);\n  }\n\n  /**\n   * configure and control the packaging process of components.\n   */\n  package() {\n    return PackageGenerator.from({\n      packageJson: this.packageJson,\n      npmIgnore: this.npmIgnore,\n    });\n  }\n}\n\nexport default new ReactEnv();\n"],"mappings":";;;;;;AACA,SAAAA,WAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,UAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,gBAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,eAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,iBAAA;EAAA,MAAAH,IAAA,GAAAC,OAAA;EAAAE,gBAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,WAAA;EAAA,MAAAJ,IAAA,GAAAC,OAAA;EAAAG,UAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,YAAA;EAAA,MAAAL,IAAA,GAAAC,OAAA;EAAAI,WAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAM,SAAA;EAAA,MAAAN,IAAA,GAAAC,OAAA;EAAAK,QAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAO,aAAA;EAAA,MAAAP,IAAA,GAAAC,OAAA;EAAAM,YAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAOA,SAAAQ,UAAA;EAAA,MAAAR,IAAA,GAAAC,OAAA;EAAAO,SAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAS,QAAA;EAAA,MAAAT,IAAA,GAAAC,OAAA;EAAAQ,OAAA,YAAAA,CAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAU,aAAA;EAAA,MAAAV,IAAA,GAAAC,OAAA;EAAAS,YAAA,YAAAA,CAAA;IAAA,OAAAV,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAW,WAAA;EAAA,MAAAX,IAAA,GAAAC,OAAA;EAAAU,UAAA,YAAAA,CAAA;IAAA,OAAAX,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAY,WAAA;EAAA,MAAAZ,IAAA,GAAAC,OAAA;EAAAW,UAAA,YAAAA,CAAA;IAAA,OAAAZ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAa,aAAA;EAAA,MAAAb,IAAA,GAAAc,sBAAA,CAAAb,OAAA;EAAAY,YAAA,YAAAA,CAAA;IAAA,OAAAb,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAe,SAAA;EAAA,MAAAf,IAAA,GAAAC,OAAA;EAAAc,QAAA,YAAAA,CAAA;IAAA,OAAAf,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAgB,sBAAA;EAAA,MAAAhB,IAAA,GAAAC,OAAA;EAAAe,qBAAA,YAAAA,CAAA;IAAA,OAAAhB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAiB,KAAA;EAAA,MAAAjB,IAAA,GAAAC,OAAA;EAAAgB,IAAA,YAAAA,CAAA;IAAA,OAAAjB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAgD,SAAAc,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,gBAAAH,GAAA,EAAAI,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAJ,GAAA,IAAAO,MAAA,CAAAC,cAAA,CAAAR,GAAA,EAAAI,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAX,GAAA,CAAAI,GAAA,IAAAC,KAAA,WAAAL,GAAA;AAAA,SAAAM,eAAAM,CAAA,QAAAC,CAAA,GAAAC,YAAA,CAAAF,CAAA,uCAAAC,CAAA,GAAAA,CAAA,GAAAE,MAAA,CAAAF,CAAA;AAAA,SAAAC,aAAAF,CAAA,EAAAI,CAAA,2BAAAJ,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAK,CAAA,GAAAL,CAAA,CAAAM,MAAA,CAAAC,WAAA,kBAAAF,CAAA,QAAAJ,CAAA,GAAAI,CAAA,CAAAG,IAAA,CAAAR,CAAA,EAAAI,CAAA,uCAAAH,CAAA,SAAAA,CAAA,YAAAQ,SAAA,yEAAAL,CAAA,GAAAD,MAAA,GAAAO,MAAA,EAAAV,CAAA;AAEhD;;AAEO,MAAMW,QAAQ,CAA8B;EAAAC,YAAA;IAGjD;AACF;AACA;IAFErB,eAAA,eAGO,OAAO;IAEd;AACF;AACA;AACA;IAHEA,eAAA,eAIO,mDAAmD;IAAAA,eAAA,uBAEjCpB,OAAO,CAAC0C,OAAO,CAAC,wBAAwB,CAAC;IAAAtB,eAAA,sBAE1C,SAAS;IAAAA,eAAA,yBAENpB,OAAO,CAAC0C,OAAO,CAAC,sBAAsB,CAAC;IAAAtB,eAAA,2BAErCpB,OAAO,CAAC0C,OAAO,CAAC,sBAAsB,CAAC;IAAAtB,eAAA,2BAEvC,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;IAAAA,eAAA,6BAEpCpB,OAAO,CAAC0C,OAAO,CAAC,6BAA6B,CAAC;IAAAtB,eAAA,6BAE9C,CAC7B,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,KAAK,EACL,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,CACR;IAAAA,eAAA,yBAE0BpB,OAAO,CAAC0C,OAAO,CAAC,mBAAmB,CAAC;IAAAtB,eAAA,8BAE/BpB,OAAO,CAAC0C,OAAO,CAAC,gBAAgB,CAAC;IAEjE;AACF;AACA;AACA;IAHEtB,eAAA,oBAIY,CAAE,GAAEuB,gCAAsB,GAAE,CAAC;IAEzC;AACF;AACA;IAFEvB,eAAA,2BAGmBwB,uBAAY,CAACC,gBAAgB;IAEhD;AACF;AACA;IAFEzB,eAAA,sBAGc;MACZ0B,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE;MACP;IACF,CAAC;EAAA;EAED;AACF;AACA;AACA;EACE;EACAC,QAAQA,CAAA,EAAyB;IAC/B;IACA;IACA,OAAOC,iCAAkB,CAACC,IAAI,CAAC;MAC7BC,QAAQ,EAAE,IAAI,CAACC,YAAY;MAC3B;MACAC,UAAU,EAAVA;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEC,MAAMA,CAAA,EAAuB;IAC3B;IACA;IACA,OAAOC,uBAAU,CAACL,IAAI,CAAC;MACrBM,IAAI,EAAExD,OAAO,CAAC0C,OAAO,CAAC,MAAM,CAAC;MAC7Be,MAAM,EAAE,IAAI,CAACC;IACf,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEC,OAAOA,CAAA,EAAwB;IAC7B,OAAOf,uBAAY,CAACM,IAAI,CAAC;MACvB;AACN;AACA;MACM;MACA;AACN;AACA;AACA;AACA;AACA;MACMU,OAAO,EAAE,IAAI,CAACC;MACd;MACA;MACA;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEC,eAAeA,CAAA,EAAgC;IAC7C,OAAOC,iCAAmB,CAACb,IAAI,CAAC;MAC9BC,QAAQ,EAAE,IAAI,CAACC;IACjB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEY,MAAMA,CAAA,EAAG;IACP,OAAOC,wBAAY,CAACf,IAAI,CAAC;MACvBC,QAAQ,EAAE,IAAI,CAACC,YAAY;MAC3Bc,MAAM,EAAEC,gBAAS;MACjBC,UAAU,EAAE,IAAI,CAACC,gBAAgB;MACjC;MACAC,WAAW,EAAEC,SAAS;MACtBC,UAAU,EAAE,IAAI,CAACC;IACnB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEC,SAASA,CAAA,EAAG;IACV,OAAOC,8BAAiB,CAACzB,IAAI,CAAC;MAC5BkB,UAAU,EAAE,IAAI,CAACQ;IACnB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAG;IACN;IACA,OAAOC,mBAAQ,CAAC5B,IAAI,CAAC,CACnB6B,6BAAc,CAAC7B,IAAI,CAAC;MAClBC,QAAQ,EAAE,IAAI,CAACC,YAAY;MAC3B;MACAC,UAAU,EAAVA;IACF,CAAC,CAAC,EACF2B,sBAAU,CAAC9B,IAAI,CAAC;MACdC,QAAQ,EAAE,IAAI,CAACC,YAAY;MAC3Bc,MAAM,EAAEC,gBAAS;MACjBC,UAAU,EAAE,IAAI,CAACC,gBAAgB;MACjC;MACAC,WAAW,EAAEC,SAAS;MACtBC,UAAU,EAAE,IAAI,CAACC;IACnB,CAAC,CAAC,EACFQ,qBAAQ,CAAC/B,IAAI,CAAC;MACZO,MAAM,EAAE,IAAI,CAACC,cAAc;MAC3BF,IAAI,EAAExD,OAAO,CAAC0C,OAAO,CAAC,MAAM;IAC9B,CAAC,CAAC,CACH,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEwC,IAAIA,CAAA,EAAG;IACL,OAAOJ,mBAAQ,CAAC5B,IAAI,CAAC,EAAE,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;EACEiC,GAAGA,CAAA,EAAG;IACJ,OAAOL,mBAAQ,CAAC5B,IAAI,CAAC,EAAE,CAAC;EAC1B;EAEAkC,eAAeA,CAAA,EAAqB;IAClC,OAAOC,wCAAgB,CAACnC,IAAI,CAAC,CAC3BoC,qCAAsB,CAACpC,IAAI,CAAC;MAC1BC,QAAQ,EAAE,IAAI,CAACC;MACf;IACF,CAAC,CAAC,EACFmC,8BAAkB,CAACrC,IAAI,CAAC;MACtBkB,UAAU,EAAE,IAAI,CAACC,gBAAgB;MACjClB,QAAQ,EAAE,IAAI,CAACC;IACjB,CAAC,CAAC,EACFoC,iCAAoB,CAACtC,IAAI,CAAC;MACxBkB,UAAU,EAAE,IAAI,CAACQ;IACnB,CAAC,CAAC,CACH,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEa,QAAQA,CAAA,EAAG;IACT,OAAOC,wBAAW,CAACxC,IAAI,CAAC,CAACyC,wCAAqB,CAACzC,IAAI,CAAC,CAAC,CAAC,CAAC;EACzD;;EAEA;AACF;AACA;AACA;AACA;EACE0C,UAAUA,CAAA,EAAG;IACX,OAAOC,yBAAY,CAAC3C,IAAI,CAAC,CACvB4C,wCAAsB,CAAC5C,IAAI,CAAC,CAAC,EAC7B6C,mCAAiB,CAAC7C,IAAI,CAAC,CAAC,EACxB8C,sCAAoB,CAAC9C,IAAI,CAAC,CAAC,EAC3B+C,kCAAgB,CAAC/C,IAAI,CAAC,CAAC,EACvBgD,0CAAwB,CAAChD,IAAI,CAAC,CAAC,EAC/BiD,kCAAgB,CAACjD,IAAI,CAAC,CAAC,CACxB,CAAC;EACJ;EAEAkD,IAAIA,CAAA,EAA4B;IAC9B,OAAOC,0BAAW,CAACnD,IAAI,CAAC,CAACoD,yBAAY,CAACpD,IAAI,CAAC,CAAC,CAAC,CAAC;EAChD;;EAEA;AACF;AACA;EACEqD,OAAOA,CAAA,EAAG;IACR,OAAOC,uBAAgB,CAACtD,IAAI,CAAC;MAC3BuD,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,SAAS,EAAE,IAAI,CAACA;IAClB,CAAC,CAAC;EACJ;AACF;AAACC,OAAA,CAAAnE,QAAA,GAAAA,QAAA;AAAA,IAAAoE,QAAA,GAAAD,OAAA,CAAAxF,OAAA,GAEc,IAAIqB,QAAQ,CAAC,CAAC"}